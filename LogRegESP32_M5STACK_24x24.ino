#include "esp_camera.h"
#define DEBUG

// Select camera model
//#define CAMERA_MODEL_WROVER_KIT
//#define CAMERA_MODEL_ESP_EYE
//#define CAMERA_MODEL_M5STACK_PSRAM
// In the plastic box
#define CAMERA_MODEL_M5STACK_WIDE
// Naked one
//#define CAMERA_MODEL_AI_THINKER

#include "camera_pins.h"
const int big_areas=24;
int q,row,column,counter,temp,divide_by;
float final_value=0;
float x_all[big_areas*big_areas];
float weights[big_areas*big_areas]={-7.716009018920104434e-03,-6.948511659594655901e-03,-6.227885702270013688e-03,-6.257776817220098500e-03,-1.276911933436656287e-02,-1.268926825196374161e-02,-1.722430244493289297e-02,-6.403283851275683690e-03,-4.936443606748228477e-03,-3.601814092275350179e-03,-1.535690742515158445e-03,1.145822843699364872e-02,1.175236081357453749e-02,6.436417332877504040e-03,2.163368576229791895e-03,2.760027515500707625e-03,3.755998879321924278e-03,-3.748308626912448711e-03,-1.531326802188131414e-02,-2.662600599394146159e-02,-6.324459478163336340e-03,3.204502520941717846e-03,1.073496609949691274e-02,1.120477371531222559e-02,-7.347408311995097009e-03,-7.113832388211147745e-03,-1.066652017393110961e-02,-1.627529446823407916e-02,-2.514905304513084111e-02,-2.774908422560404264e-02,-3.952325197836151910e-02,-1.417264565343001950e-02,3.345167177592782426e-02,4.307146007242027702e-02,5.377577272397154884e-02,5.525675091350264190e-02,5.521552379361014534e-02,5.243557164251224506e-02,5.314754757285247710e-02,2.623798363663423783e-02,-7.286551140867513670e-04,-1.776896823118098712e-02,-4.691521088447710153e-02,-5.078734281784065552e-02,-3.972017324645472913e-02,-8.472405169406168474e-03,-4.732235891349639498e-04,1.017624209592465218e-02,-7.712397496633789824e-03,-3.295632647996739762e-03,-1.717339009993899823e-02,-3.419886642179381653e-02,-7.037552554152570750e-02,-6.540983609840878010e-02,-4.229481980680808301e-02,1.355267410337359637e-04,4.463043448148531350e-02,7.553967510336002944e-02,7.642441106742775547e-02,7.742554132494659791e-02,7.819799153220748089e-02,7.910531541856269389e-02,7.823227762768518445e-02,7.182636968059825933e-02,4.620841074767212397e-02,-3.142657001156453061e-03,-5.697634046332269997e-02,-5.247108135557796565e-02,-4.986261785947221359e-02,-3.117784167145210006e-02,-6.035417939040834193e-03,1.016902757091932806e-02,-6.830776712940985970e-03,-1.495795769396062597e-02,-2.632175209229658044e-02,-5.298905703704143849e-02,-7.230348918674500691e-02,-2.315938498625704639e-02,-1.270196059020320227e-02,-3.997219030211085088e-05,2.010984804891594729e-02,5.839301691116176307e-02,7.545989950238857213e-02,7.599370527019874699e-02,7.844537743472281000e-02,7.747272837856661321e-02,7.351574400931912279e-02,6.204245393869474434e-02,2.679623869409650944e-02,1.922013903209592728e-02,-7.752959853041271540e-03,-3.647376134826584015e-02,-5.778364580825671309e-02,-5.184659462478707903e-02,-1.080830423996727470e-02,5.042576374592726632e-03,-7.327470538821282721e-03,-2.647536950478848738e-02,-2.929989688095026648e-02,-5.187081076107441513e-02,-4.439683491096593770e-02,-1.142478677006682208e-02,-1.434700003113964940e-03,-2.856241824798867474e-03,6.644984341269386278e-04,2.204335168906969636e-02,6.534505447058315541e-02,7.560112924827448733e-02,7.685355937039727026e-02,7.357679864558400173e-02,5.959009245570925234e-02,2.993267190151000304e-02,2.434440672766329666e-02,1.507914444654920652e-02,1.037432864305789550e-02,-8.713966466563654104e-03,-4.805142845044894223e-02,-5.687469799385933000e-02,-1.832212758861907417e-02,5.637166578898690147e-03,-7.160358450902638491e-03,-1.009374053659299608e-02,-3.059808797100233013e-02,-2.730692693422834619e-02,-2.611093171875597876e-02,-1.789621894524921937e-03,-8.179823695628576138e-05,-7.593942325460896307e-04,9.075601425247614880e-04,3.143025564366789659e-03,2.846187889031666363e-02,7.057730737460754522e-02,7.579750276103301709e-02,6.020715877464336008e-02,2.682741106525262167e-02,2.318669137755869497e-02,1.259709966679641198e-02,1.460524595795589277e-02,1.554025870777111899e-02,1.285822726128760078e-02,-8.245954056930753298e-03,-3.280289853137741823e-02,-2.170819596923533393e-02,1.222999772409238961e-02,-7.919739523692797753e-03,-7.580663866643868286e-03,-2.267677252459908942e-03,-1.651620581774803156e-03,-2.619289527361907954e-03,-2.181919967515111042e-03,-4.897458717188990854e-04,-7.919527685274019378e-04,-9.496320166300384422e-04,-1.384531719093179056e-02,-2.892031475507610139e-02,-6.958171426780071327e-03,1.392208213804502388e-02,-8.673662542477075799e-03,2.277258236816285923e-04,5.621641849709983069e-03,5.926249234737428900e-03,1.345296314662160903e-02,1.602464123562494583e-02,1.525760229576791742e-02,6.921123483032374027e-03,2.110211323077206447e-05,1.005916998312284330e-02,1.308039171651791295e-02,-7.580495396678660000e-03,5.281417493341685268e-03,2.205572214454429650e-02,2.640342553857705568e-02,1.630442092076960642e-02,5.962461282262191764e-04,9.011878105611952202e-04,-1.230813080870124185e-02,-4.206853548721591757e-02,-5.006406035737816923e-02,-6.651892199641917802e-02,-6.694630075368451783e-02,-4.645831301300692995e-02,-5.723947495709602595e-02,-5.969572393547700750e-02,-4.779224120495141614e-02,-8.746225049974925073e-03,1.519206689406747517e-02,1.329391092527851953e-02,2.032746163943291787e-02,3.228668566400356987e-02,3.723324333751616699e-02,1.939854459153165719e-02,1.283274046314853041e-02,-8.876787665140977585e-03,1.661051549160824647e-02,4.543906758683752961e-02,3.994163623961984738e-02,4.714789674618341531e-02,1.330370801771892618e-02,-5.883375155404062598e-03,-3.421531671166352928e-02,-5.316613133347977693e-02,-6.859277087507036075e-02,-7.475962696313850908e-02,-7.378500824695918836e-02,-7.149945208151765874e-02,-6.046050306419951254e-02,-6.449033249450737693e-02,-5.759905488453693351e-02,-4.276314660952237195e-02,-1.332750103163220234e-02,1.370036169403834533e-02,2.853635206060477214e-02,5.462531784814347868e-02,6.572455156180660729e-02,3.375589634786439058e-02,1.254286886425756004e-02,-8.744562539913640700e-03,2.513310792619772444e-02,4.682579626044760385e-02,7.099994400219632185e-02,5.714098502278599362e-02,3.799971644320688374e-02,-4.316281365590586387e-03,-5.004861660835575876e-02,-6.957380575317881344e-02,-7.741722510420745440e-02,-7.439987710117484943e-02,-7.491250625106014860e-02,-7.270507832561842743e-02,-7.069551681878481764e-02,-6.802258030563723690e-02,-6.003375545335353641e-02,-5.457111802554833607e-02,-1.095723733034848109e-02,2.011402857980800971e-02,4.349480029028981315e-02,7.922795490320852507e-02,7.778754073927868218e-02,4.159861078190963540e-02,1.344093694513972918e-02,-4.198143716609451133e-03,3.403400957785567699e-02,5.200294470682340076e-02,6.992466853153844752e-02,7.212956325210351238e-02,4.758694412770013427e-02,2.137426882541251794e-02,-3.897514092108649020e-02,-7.253531519029429719e-02,-7.565457979721071369e-02,-7.624487466989564310e-02,-7.376535394526824441e-02,-7.492204692513784736e-02,-7.132770855783722441e-02,-6.864597014887514892e-02,-6.481251079747220312e-02,-5.789603877165815093e-02,-1.586265573321026315e-02,2.379108849255868324e-02,7.542357172221378359e-02,7.839963643762047629e-02,7.887457831032816669e-02,4.700916209444064298e-02,1.210823266474611061e-02,3.736305102325911728e-03,3.602080433749308558e-02,5.285454386726372300e-02,6.814471773581905201e-02,7.113380430596505377e-02,6.353079017418111762e-02,2.623681470950459810e-02,-1.090880868602570920e-02,-6.780655044716010771e-02,-7.612722010199721168e-02,-7.594019390850313689e-02,-7.504523577768511255e-02,-7.547901181098225221e-02,-7.417154077851054184e-02,-7.032775637654045675e-02,-6.651173852774235062e-02,-4.493768226167182273e-02,-2.668215741179361805e-02,5.624651140770541013e-02,7.699751484795717971e-02,7.795427655056300087e-02,7.893951082337045955e-02,5.842155764175442634e-02,1.720789052800003258e-02,-3.615145620755572976e-03,3.612859724474885847e-02,5.256668672705213513e-02,6.835248164263160731e-02,6.931258693434323714e-02,6.181456397195061320e-02,3.790622616423310054e-02,-1.178359526506225427e-02,-5.656270008323287940e-02,-7.436297872903128992e-02,-7.648697120099505475e-02,-7.600686785799896927e-02,-7.460019180390196902e-02,-7.229024064164638053e-02,-7.158378346143794146e-02,-6.829062029933134770e-02,-5.338767598466709341e-02,1.694520523297617185e-03,6.573424622639964521e-02,7.693210500282074427e-02,7.845707153436086434e-02,7.829726400781912565e-02,5.712372295742666750e-02,1.810739177777431763e-02,-4.000767538156320413e-03,3.600041915716307300e-02,5.249125651155626959e-02,6.803009923617929500e-02,6.941134276240289169e-02,5.816412840226808240e-02,3.215797121818026599e-02,-1.806492160080036199e-02,-6.247795164685992358e-02,-7.429292695198190521e-02,-7.579936730793243593e-02,-7.582030081663029830e-02,-7.396364209236230836e-02,-7.212048696219809651e-02,-7.235506895675834771e-02,-6.877560706416159519e-02,-5.854995555697962983e-02,3.254213642487664032e-04,6.690157515779779351e-02,7.826429576227503238e-02,7.707088715200881290e-02,7.581594346902870152e-02,5.182546686692893895e-02,1.172050484113479688e-02,-8.203246179482530376e-03,3.065476831046059711e-02,5.142259169238327238e-02,6.722577027539092254e-02,6.920689776563924978e-02,6.288093719767243184e-02,2.095009434023694522e-02,-3.234128680971282144e-02,-6.532878874450138984e-02,-7.512269860237234809e-02,-7.564068386769373653e-02,-7.568481891421056929e-02,-7.414844073287510384e-02,-7.544440302480336091e-02,-7.232727259898800998e-02,-6.819423323612762433e-02,-5.290577357035520373e-02,-2.283628303778107577e-02,4.708421362057552129e-02,7.839130028924248816e-02,7.805209477031556375e-02,6.384576976695365003e-02,4.499677417596328888e-02,1.218697219298052643e-02,-3.373172464246069775e-03,1.218574837004741604e-02,4.979220442330407892e-02,6.675850942313829584e-02,6.362981372850119721e-02,3.406151348123852979e-02,2.571678975401495669e-03,-2.425852416069028059e-02,-5.981123613575669434e-02,-6.600606924617913318e-02,-7.318798343829109598e-02,-7.393772574144230614e-02,-7.352482331985543684e-02,-7.351539436904974689e-02,-6.932258304394761650e-02,-5.407211257554760814e-02,-3.410295780457914261e-02,-2.040002885989529793e-02,2.429822286043032895e-02,6.663048602374800622e-02,7.849184571787926057e-02,6.379933235454311735e-02,3.101786084868118909e-02,1.193377523568822825e-02,-3.985971214183423213e-03,-2.692719033454484944e-03,2.929247140363330087e-02,6.047705390666267833e-02,3.826884018913470631e-02,1.425246202865175678e-02,6.473632543698443903e-03,-1.451662821298122484e-02,-4.786638154292691821e-02,-6.539850392573988425e-02,-6.437305445285644578e-02,-6.543686740582778383e-02,-6.522480173392695979e-02,-5.623553947325659469e-02,-5.390586023341918664e-02,-3.036635372726222484e-02,-1.944049835628289952e-02,8.587808990505724910e-03,1.056024371052033221e-02,3.501784374112878323e-02,6.750784567320153307e-02,4.662837589264388904e-02,2.283218063322792896e-02,1.130192081572852988e-02,-3.928770652642676713e-03,-8.080132119170631982e-03,5.757413753586878950e-03,3.647233968055384884e-02,1.424534313938979717e-02,6.161270972318659556e-03,-1.362773500251588266e-03,-6.763453430259748294e-05,-7.399888927101099315e-03,-3.250542681071337536e-02,-3.579317282851492837e-02,-2.262851981612631555e-02,-1.849091378785005374e-02,-1.794855519334718347e-02,-1.689467754917095901e-02,-1.481974063172785371e-02,7.109583876753521395e-03,6.063644309725065018e-03,9.467944086353917779e-03,1.818205785765695040e-02,3.447873249405429552e-02,3.011269442517794728e-02,7.200478814690179641e-03,9.528277486005461497e-03,-4.670464121099357144e-03,-1.350747466742056868e-02,-2.102811307949396108e-02,1.723654803454952554e-03,4.771341320443290950e-03,-3.235452490261229389e-03,-2.546304521428880644e-03,-8.007605822970218770e-04,8.496334752187225834e-04,1.606989599676399540e-03,8.024626920283496959e-03,2.516524124623614050e-02,5.148305185947373019e-02,4.894520021902935836e-02,1.377312250033960704e-02,7.335274739146977266e-03,6.879409768752522969e-03,7.591795006359320329e-03,7.452565461189213092e-03,6.801441999451741938e-03,-1.598033163767535736e-02,-9.735952132877475490e-03,2.170672334460134727e-03,7.970855071099222644e-03,-5.559160083970861137e-03,-1.533719700208361660e-02,-3.968454870416035507e-02,-6.133143720383479186e-02,-1.836179393430981133e-02,-3.067228554823397263e-03,-2.746572044923006797e-03,-1.182815381822193476e-03,-8.989003762321421233e-04,2.113333360295587427e-03,1.840680604800476808e-02,5.556981489344389735e-02,7.206246102875715764e-02,7.343485489420746581e-02,4.778674413141951322e-02,1.199826089013117901e-02,9.138035947218528521e-03,6.938939115244156970e-03,4.837815883799309429e-03,-9.920104494663385675e-03,-4.079225496735507800e-02,-2.435107605231529720e-02,-7.705762030624384654e-03,7.938072387656591733e-03,-4.944650698471936626e-03,-1.545981095315939260e-02,-3.330407544296420247e-02,-5.024185603684678397e-02,-6.741779505001493922e-02,-2.583282775807691292e-02,-1.059819391393019769e-02,-1.428431671240466610e-03,1.313249329883374580e-03,1.635794756367991293e-02,4.778251908153187399e-02,6.491050147396365544e-02,7.244396929142121744e-02,7.319535752877405488e-02,6.482972889303552366e-02,4.207142523705757059e-02,1.050831977154377192e-02,6.062281252550283731e-03,-9.691770859536340266e-03,-5.019046894052571484e-02,-5.315438718375700006e-02,-4.178880938539424744e-02,-1.769600795591251552e-02,8.656722637685992927e-03,-5.001636051547980570e-03,-1.020812239417848155e-02,-2.323650756343527413e-02,-4.525014658351343005e-02,-7.298766913820624314e-02,-6.746752112373118060e-02,-1.897823107267896173e-02,-8.838664606802919960e-03,-5.494489681838796331e-03,3.295714184102209454e-02,6.130369573465309363e-02,6.922876224144590418e-02,7.077647500938069602e-02,6.658648342029475919e-02,7.184848211546246421e-02,5.700972901883484545e-02,3.020553823530530008e-02,-1.408836537077867018e-02,-4.981426660873619627e-02,-5.603265245954946322e-02,-5.291370567630963168e-02,-3.199024791656597533e-02,1.059582711944795754e-03,8.688027922723030871e-03,-5.040783467549316173e-03,-9.091376891524678705e-03,-1.816208775064541425e-02,-2.914390606662932426e-02,-4.475503951717101081e-02,-6.644072708289398832e-02,-6.151160803986120695e-02,-5.350414355138598949e-02,7.580725194325199342e-04,3.645137950402412008e-02,5.299361311150341952e-02,5.280350586584522249e-02,5.496924337232782232e-02,5.569804426589702873e-02,5.282218273229018213e-02,4.366050117688206195e-02,1.831138992726165024e-02,-3.287899841626087255e-02,-5.451032887335351823e-02,-4.774660923576733162e-02,-2.830316809997916738e-02,-1.819671269086103535e-02,-5.548864312225129138e-03,8.587427361527805864e-03,-6.022385664407303371e-03,-1.017032775624201330e-02,-9.840614004097841122e-03,-1.739320064087504156e-02,-2.538886218278100376e-02,-4.478672275423899174e-02,-4.939525294529381605e-02,-3.275154140371169115e-02,-1.762746750264770554e-02,-5.444413399115937725e-03,-2.168088447232531697e-03,6.345948314800899451e-03,8.869456579982363739e-03,5.974777083843802253e-03,1.058992568864318591e-02,3.977297797112504772e-03,5.249707948217657329e-04,-4.898576810380533483e-03,-2.434210556469967521e-02,-1.487497808881224105e-02,-4.083057528601291390e-03,3.065471982343220825e-03,5.912570131045946469e-03,8.871115386864424773e-03};
uint8_t *p_all;
static double time1,time2,time3,Total_time1,Total_time2;

void setup() {
  Serial.begin(115200);
  Serial.setDebugOutput(true);
  Serial.println();

  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sscb_sda = SIOD_GPIO_NUM;
  config.pin_sscb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_GRAYSCALE;
  //init with high specs to pre-allocate larger buffers
  if(psramFound()){
    config.frame_size = FRAMESIZE_SVGA;
    config.jpeg_quality = 12;
    config.fb_count = 2;
  
  } else {
    config.frame_size = FRAMESIZE_SVGA;
    config.jpeg_quality = 12;
    config.fb_count = 1;
  }
  
#if defined(CAMERA_MODEL_ESP_EYE)
  pinMode(13, INPUT_PULLUP);
  pinMode(14, INPUT_PULLUP);
#endif

  // camera init
  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("Camera init failed with error 0x%x", err);
    return;
  }

  sensor_t * s = esp_camera_sensor_get();
  //initial sensors are flipped vertically and colors are a bit saturated
  if (s->id.PID == OV3660_PID) {
    s->set_vflip(s, 1);//flip it back
    s->set_brightness(s, 1);//up the blightness just a bit
    s->set_saturation(s, -2);//lower the saturation
  }
  //drop down frame size for higher initial frame rate
  s->set_framesize(s, FRAMESIZE_SVGA);

#if defined(CAMERA_MODEL_M5STACK_WIDE)
  s->set_vflip(s, 1);
  s->set_hmirror(s, 1);
#endif

divide_by=255*(600/big_areas)*(600/big_areas);
}

void loop() {
  time1=micros();
  for(q=0;q<big_areas*big_areas;q++)
  {
    x_all[q]=0;
  }
  
  //x1=x2=x3=x4=x5=x6=x7=x8=x9=0;
  final_value=0;
  counter=0;
  camera_fb_t *fb = esp_camera_fb_get();
  if ( fb ) {

    esp_camera_fb_return(fb);
    time2=micros();

    p_all=fb->buf;
      for(row=0;row<600;row++)
      {
        counter=counter+100;
        for(column=0;column<600;column++)
        {
              temp=(int)((row*big_areas/600)*big_areas+(column*big_areas/600));
              x_all[temp]=x_all[temp]+*(p_all+counter);
              counter=counter+1;             
        }
        counter=counter+100;
      }
      #ifdef DEBUG
      Serial.printf("COUNTER %d\n", counter);
      #endif
      
      for(counter=0;counter<big_areas*big_areas;counter++)
      {
        final_value=final_value+x_all[counter]*weights[counter]/divide_by;
      }
      time3=micros();
      Total_time1=time2-time1;
      Total_time2=time3-time2;
      Serial.printf("FINAL %f\n", final_value);     
      Serial.printf("TIME12 %f\n", Total_time1);
      Serial.printf("TIME23 %f\n", Total_time2);


      #ifdef DEBUG
      Serial.printf("x1:x2:x3: %f %f %f\n", x_all[0]/divide_by, x_all[1]/divide_by, x_all[2]/divide_by);
      Serial.printf("x4:x5:x6: %f %f %f\n", x_all[3]/divide_by, x_all[4]/divide_by, x_all[5]/divide_by);
      Serial.printf("x7:x8:x9: %f %f %f\n", x_all[6]/divide_by, x_all[7]/divide_by, x_all[8]/divide_by);
      #endif
    
  }

  delay(1000); 
}
